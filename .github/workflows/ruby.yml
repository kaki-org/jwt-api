name: Build

#プルリクエスト作成時に実行(他にもpush時など設定できます)
on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - staging

concurrency:
  group: jwt-api-${{ github.event.pull_request.head.ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  rspec_job:
    #ubuntu環境で動かします
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16.0-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    #GitHub Actionsでサポートしているrubyのversionは2.6系以降です
    steps:
      - name: debug
        run: |
          echo 'debug' ${{ github.event.pull_request.head.ref || github.ref_name }}
          echo 'github.event.pull_request.head.ref' ${{ github.event.pull_request.head.ref }}
          echo 'github.ref_name' ${{ github.ref_name }}
          echo 'github.event.pull_request.number' ${{ github.event.pull_request.number }}
      - name: checkout
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v4
      - name: checkout pr
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Ruby version
        uses: ruby/setup-ruby@master
        with:
          ruby-version: 3.3.0

      #MySQLをインストール
      #- name: Install dependent libralies
      #  run: sudo apt-get install libmysqlclient-dev

      - name: Setup bundler
        run: gem install bundler

      - name: bundle install
        run: |
          bundle install --jobs 4 --retry 3 --path vendor/bundle
      - name: rubocop
        run: bundle exec rubocop
      - name: tmp cache clear
        run: bundle exec rails tmp:cache:clear

      - name: Setup Database
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundle exec rake db:create
          bundle exec rake db:schema:load
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Run RSpec
        run: bundle exec rspec
        env:
          TZ: "Asia/Tokyo" # タイムゾーンを指定
          LANG: "ja_JP.UTF-8"
          LC_ALL: "C.UTF-8"
          LANGUAGE: "ja_JP.UTF-8"
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          BASE_URL: 'http://localhost:3000'
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # 対象リポジトリがpublicリポジトリならばトークン不要
          files: ./coverage/coverage.xml
          flags: unittests
          name: ruby-sample-for-codecov
          fail_ci_if_error: true
